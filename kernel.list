
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00053f 	b	9504 <main>

Disassembly of section .text:

00009460 <readStringLength>:
    9460:	e3a05000 	mov	r5, #0

00009464 <loop_start>:
    9464:	e7d34005 	ldrb	r4, [r3, r5]
    9468:	e2855001 	add	r5, r5, #1
    946c:	e3340000 	teq	r4, #0
    9470:	1afffffb 	bne	9464 <loop_start>

00009474 <loop_end>:
    9474:	e1a00003 	mov	r0, r3
    9478:	e1a01005 	mov	r1, r5
    947c:	e1a0f00e 	mov	pc, lr

00009480 <convertASCIItoBinary>:
    9480:	e3a05000 	mov	r5, #0
    9484:	e3a02000 	mov	r2, #0

00009488 <aloop>:
    9488:	e7d31005 	ldrb	r1, [r3, r5]
    948c:	e3310031 	teq	r1, #49	; 0x31
    9490:	01a06516 	lsleq	r6, r6, r5
    9494:	01822006 	orreq	r2, r2, r6
    9498:	02855001 	addeq	r5, r5, #1
    949c:	0afffff9 	beq	9488 <aloop>
    94a0:	e3310030 	teq	r1, #48	; 0x30
    94a4:	02855001 	addeq	r5, r5, #1
    94a8:	0afffff6 	beq	9488 <aloop>
    94ac:	e3510000 	cmp	r1, #0
    94b0:	0a000007 	beq	94d4 <endloop>

000094b4 <wnferror>:
    94b4:	e1a03005 	mov	r3, r5
    94b8:	e59f3088 	ldr	r3, [pc, #136]	; 9548 <haltLoop$+0x4>
    94bc:	e1a00003 	mov	r0, r3
    94c0:	eaffffe6 	b	9460 <readStringLength>
    94c4:	ea000084 	b	96dc <WriteStringUART>
    94c8:	e1a03005 	mov	r3, r5
    94cc:	e3a05000 	mov	r5, #0
    94d0:	eaffffec 	b	9488 <aloop>

000094d4 <endloop>:
    94d4:	e1a0f00e 	mov	pc, lr

000094d8 <convertBinarytoASCII>:
    94d8:	e3a05000 	mov	r5, #0
    94dc:	e3a06000 	mov	r6, #0

000094e0 <bloop>:
    94e0:	e7d34005 	ldrb	r4, [r3, r5]
    94e4:	e3540000 	cmp	r4, #0
    94e8:	0a000004 	beq	9500 <bendloop>
    94ec:	e2444030 	sub	r4, r4, #48	; 0x30
    94f0:	e1a06086 	lsl	r6, r6, #1
    94f4:	e0866004 	add	r6, r6, r4
    94f8:	e2855001 	add	r5, r5, #1
    94fc:	eafffff7 	b	94e0 <bloop>

00009500 <bendloop>:
    9500:	e1a0f00e 	mov	pc, lr

00009504 <main>:
    9504:	e3a0d902 	mov	sp, #32768	; 0x8000
    9508:	eb000012 	bl	9558 <EnableJTAG>
    950c:	eb000034 	bl	95e4 <InitUART>
    9510:	e59f3034 	ldr	r3, [pc, #52]	; 954c <haltLoop$+0x8>
    9514:	ebffffd1 	bl	9460 <readStringLength>
    9518:	eb00006f 	bl	96dc <WriteStringUART>
    951c:	e3a07002 	mov	r7, #2
    9520:	e59f3028 	ldr	r3, [pc, #40]	; 9550 <haltLoop$+0xc>
    9524:	ebffffcd 	bl	9460 <readStringLength>
    9528:	eb00006b 	bl	96dc <WriteStringUART>
    952c:	e59f0020 	ldr	r0, [pc, #32]	; 9554 <haltLoop$+0x10>
    9530:	e3a01c01 	mov	r1, #256	; 0x100
    9534:	eb000074 	bl	970c <ReadLineUART>
    9538:	e3a02c01 	mov	r2, #256	; 0x100
    953c:	e59f3010 	ldr	r3, [pc, #16]	; 9554 <haltLoop$+0x10>
    9540:	ebffffce 	bl	9480 <convertASCIItoBinary>

00009544 <haltLoop$>:
    9544:	eafffffe 	b	9544 <haltLoop$>
    9548:	0000941d 	.word	0x0000941d
    954c:	00009380 	.word	0x00009380
    9550:	000093ca 	.word	0x000093ca
    9554:	00009080 	.word	0x00009080

00009558 <EnableJTAG>:
    9558:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    955c:	e59f0064 	ldr	r0, [pc, #100]	; 95c8 <dowaitloop+0xc>
    9560:	e0211001 	eor	r1, r1, r1
    9564:	e5801000 	str	r1, [r0]
    9568:	eb000012 	bl	95b8 <dowait>
    956c:	e59f0058 	ldr	r0, [pc, #88]	; 95cc <dowaitloop+0x10>
    9570:	e59f1058 	ldr	r1, [pc, #88]	; 95d0 <dowaitloop+0x14>
    9574:	e5801000 	str	r1, [r0]
    9578:	eb00000e 	bl	95b8 <dowait>
    957c:	e0211001 	eor	r1, r1, r1
    9580:	e5801000 	str	r1, [r0]
    9584:	e59f0048 	ldr	r0, [pc, #72]	; 95d4 <dowaitloop+0x18>
    9588:	e5901000 	ldr	r1, [r0]
    958c:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    9590:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9594:	e5801000 	str	r1, [r0]
    9598:	e59f0038 	ldr	r0, [pc, #56]	; 95d8 <dowaitloop+0x1c>
    959c:	e5901000 	ldr	r1, [r0]
    95a0:	e59f2034 	ldr	r2, [pc, #52]	; 95dc <dowaitloop+0x20>
    95a4:	e1c11002 	bic	r1, r1, r2
    95a8:	e59f2030 	ldr	r2, [pc, #48]	; 95e0 <dowaitloop+0x24>
    95ac:	e1811002 	orr	r1, r1, r2
    95b0:	e5801000 	str	r1, [r0]
    95b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000095b8 <dowait>:
    95b8:	e3a02f4b 	mov	r2, #300	; 0x12c

000095bc <dowaitloop>:
    95bc:	e2522001 	subs	r2, r2, #1
    95c0:	1afffffd 	bne	95bc <dowaitloop>
    95c4:	e12fff1e 	bx	lr
    95c8:	3f200094 	.word	0x3f200094
    95cc:	3f200098 	.word	0x3f200098
    95d0:	0bc00010 	.word	0x0bc00010
    95d4:	3f200000 	.word	0x3f200000
    95d8:	3f200008 	.word	0x3f200008
    95dc:	00e3ffc0 	.word	0x00e3ffc0
    95e0:	0061b6c0 	.word	0x0061b6c0

000095e4 <InitUART>:
    95e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    95e8:	e59f017c 	ldr	r0, [pc, #380]	; 976c <WaitForCycles+0x10>
    95ec:	e3a01001 	mov	r1, #1
    95f0:	e5801000 	str	r1, [r0]
    95f4:	e59f0174 	ldr	r0, [pc, #372]	; 9770 <WaitForCycles+0x14>
    95f8:	e0211001 	eor	r1, r1, r1
    95fc:	e5801000 	str	r1, [r0]
    9600:	e59f016c 	ldr	r0, [pc, #364]	; 9774 <WaitForCycles+0x18>
    9604:	e0211001 	eor	r1, r1, r1
    9608:	e5801000 	str	r1, [r0]
    960c:	e59f0164 	ldr	r0, [pc, #356]	; 9778 <WaitForCycles+0x1c>
    9610:	e3a01003 	mov	r1, #3
    9614:	e5801000 	str	r1, [r0]
    9618:	e59f015c 	ldr	r0, [pc, #348]	; 977c <WaitForCycles+0x20>
    961c:	e0211001 	eor	r1, r1, r1
    9620:	e5801000 	str	r1, [r0]
    9624:	e59f0144 	ldr	r0, [pc, #324]	; 9770 <WaitForCycles+0x14>
    9628:	e0211001 	eor	r1, r1, r1
    962c:	e5801000 	str	r1, [r0]
    9630:	e59f0148 	ldr	r0, [pc, #328]	; 9780 <WaitForCycles+0x24>
    9634:	e3a010c6 	mov	r1, #198	; 0xc6
    9638:	e5801000 	str	r1, [r0]
    963c:	e59f0140 	ldr	r0, [pc, #320]	; 9784 <WaitForCycles+0x28>
    9640:	e59f1140 	ldr	r1, [pc, #320]	; 9788 <WaitForCycles+0x2c>
    9644:	e5801000 	str	r1, [r0]
    9648:	e3a0000e 	mov	r0, #14
    964c:	e3a01002 	mov	r1, #2
    9650:	eb000053 	bl	97a4 <SetGpioFunction>
    9654:	e3a0000f 	mov	r0, #15
    9658:	e3a01002 	mov	r1, #2
    965c:	eb000050 	bl	97a4 <SetGpioFunction>
    9660:	e59f0124 	ldr	r0, [pc, #292]	; 978c <WaitForCycles+0x30>
    9664:	e0211001 	eor	r1, r1, r1
    9668:	e5801000 	str	r1, [r0]
    966c:	e3a00096 	mov	r0, #150	; 0x96
    9670:	eb000039 	bl	975c <WaitForCycles>
    9674:	e59f0114 	ldr	r0, [pc, #276]	; 9790 <WaitForCycles+0x34>
    9678:	e3a01903 	mov	r1, #49152	; 0xc000
    967c:	e5801000 	str	r1, [r0]
    9680:	e3a00096 	mov	r0, #150	; 0x96
    9684:	eb000034 	bl	975c <WaitForCycles>
    9688:	e59f0100 	ldr	r0, [pc, #256]	; 9790 <WaitForCycles+0x34>
    968c:	e0211001 	eor	r1, r1, r1
    9690:	e5801000 	str	r1, [r0]
    9694:	e59f00d8 	ldr	r0, [pc, #216]	; 9774 <WaitForCycles+0x18>
    9698:	e3a01003 	mov	r1, #3
    969c:	e5801000 	str	r1, [r0]
    96a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000096a4 <PutCharUART>:
    96a4:	e59f20e8 	ldr	r2, [pc, #232]	; 9794 <WaitForCycles+0x38>

000096a8 <putWaitLoop$>:
    96a8:	e5921000 	ldr	r1, [r2]
    96ac:	e3110020 	tst	r1, #32
    96b0:	0afffffc 	beq	96a8 <putWaitLoop$>
    96b4:	e59f20dc 	ldr	r2, [pc, #220]	; 9798 <WaitForCycles+0x3c>
    96b8:	e5820000 	str	r0, [r2]
    96bc:	e1a0f00e 	mov	pc, lr

000096c0 <GetCharUART>:
    96c0:	e59f20cc 	ldr	r2, [pc, #204]	; 9794 <WaitForCycles+0x38>

000096c4 <getWaitLoop$>:
    96c4:	e5921000 	ldr	r1, [r2]
    96c8:	e3110001 	tst	r1, #1
    96cc:	0afffffc 	beq	96c4 <getWaitLoop$>
    96d0:	e59f20c0 	ldr	r2, [pc, #192]	; 9798 <WaitForCycles+0x3c>
    96d4:	e5920000 	ldr	r0, [r2]
    96d8:	e1a0f00e 	mov	pc, lr

000096dc <WriteStringUART>:
    96dc:	e92d4030 	push	{r4, r5, lr}
    96e0:	e1a04000 	mov	r4, r0
    96e4:	e1a05001 	mov	r5, r1
    96e8:	e3a06000 	mov	r6, #0

000096ec <writeLoop$>:
    96ec:	e3550000 	cmp	r5, #0
    96f0:	da000004 	ble	9708 <writeLoopEnd$>
    96f4:	e7d40006 	ldrb	r0, [r4, r6]
    96f8:	ebffffe9 	bl	96a4 <PutCharUART>
    96fc:	e2866001 	add	r6, r6, #1
    9700:	e2455001 	sub	r5, r5, #1
    9704:	eafffff8 	b	96ec <writeLoop$>

00009708 <writeLoopEnd$>:
    9708:	e8bd8030 	pop	{r4, r5, pc}

0000970c <ReadLineUART>:
    970c:	e92d4070 	push	{r4, r5, r6, lr}
    9710:	e1a04000 	mov	r4, r0
    9714:	e1a05001 	mov	r5, r1
    9718:	e3a06000 	mov	r6, #0

0000971c <readLoop$>:
    971c:	e1360005 	teq	r6, r5
    9720:	0a00000b 	beq	9754 <readLoopEnd$>
    9724:	ebffffe5 	bl	96c0 <GetCharUART>
    9728:	ebffffdd 	bl	96a4 <PutCharUART>
    972c:	e5c40000 	strb	r0, [r4]
    9730:	e2866001 	add	r6, r6, #1
    9734:	e2844001 	add	r4, r4, #1
    9738:	e330000d 	teq	r0, #13
    973c:	1afffff6 	bne	971c <readLoop$>
    9740:	e3a0000a 	mov	r0, #10
    9744:	ebffffd6 	bl	96a4 <PutCharUART>
    9748:	e2444001 	sub	r4, r4, #1
    974c:	e3a00000 	mov	r0, #0
    9750:	e5c40000 	strb	r0, [r4]

00009754 <readLoopEnd$>:
    9754:	e2460001 	sub	r0, r6, #1
    9758:	e8bd8070 	pop	{r4, r5, r6, pc}

0000975c <WaitForCycles>:
    975c:	e2400001 	sub	r0, r0, #1
    9760:	e3500000 	cmp	r0, #0
    9764:	aafffffc 	bge	975c <WaitForCycles>
    9768:	e1a0f00e 	mov	pc, lr
    976c:	3f215004 	.word	0x3f215004
    9770:	3f215044 	.word	0x3f215044
    9774:	3f215060 	.word	0x3f215060
    9778:	3f21504c 	.word	0x3f21504c
    977c:	3f215050 	.word	0x3f215050
    9780:	3f215048 	.word	0x3f215048
    9784:	3f215068 	.word	0x3f215068
    9788:	0000010e 	.word	0x0000010e
    978c:	3f200094 	.word	0x3f200094
    9790:	3f200098 	.word	0x3f200098
    9794:	3f215054 	.word	0x3f215054
    9798:	3f215040 	.word	0x3f215040

0000979c <GetGpioAddress>:
    979c:	e59f00cc 	ldr	r0, [pc, #204]	; 9870 <GetGpio+0x44>
    97a0:	e1a0f00e 	mov	pc, lr

000097a4 <SetGpioFunction>:
    97a4:	e3500035 	cmp	r0, #53	; 0x35
    97a8:	93510007 	cmpls	r1, #7
    97ac:	81a0f00e 	movhi	pc, lr
    97b0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    97b4:	e1a02000 	mov	r2, r0
    97b8:	ebfffff7 	bl	979c <GetGpioAddress>

000097bc <functionLoop$>:
    97bc:	e3520009 	cmp	r2, #9
    97c0:	8242200a 	subhi	r2, r2, #10
    97c4:	82800004 	addhi	r0, r0, #4
    97c8:	8afffffb 	bhi	97bc <functionLoop$>
    97cc:	e0822082 	add	r2, r2, r2, lsl #1
    97d0:	e1a01211 	lsl	r1, r1, r2
    97d4:	e3a03007 	mov	r3, #7
    97d8:	e1a03213 	lsl	r3, r3, r2
    97dc:	e5902000 	ldr	r2, [r0]
    97e0:	e1c22003 	bic	r2, r2, r3
    97e4:	e1811002 	orr	r1, r1, r2
    97e8:	e5801000 	str	r1, [r0]
    97ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000097f0 <SetGpio>:
    97f0:	e3500035 	cmp	r0, #53	; 0x35
    97f4:	81a0f00e 	movhi	pc, lr
    97f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    97fc:	e1a02000 	mov	r2, r0
    9800:	ebffffe5 	bl	979c <GetGpioAddress>
    9804:	e1a032a2 	lsr	r3, r2, #5
    9808:	e1a03103 	lsl	r3, r3, #2
    980c:	e0800003 	add	r0, r0, r3
    9810:	e202201f 	and	r2, r2, #31
    9814:	e3a03001 	mov	r3, #1
    9818:	e1a03213 	lsl	r3, r3, r2
    981c:	e3310000 	teq	r1, #0
    9820:	05803028 	streq	r3, [r0, #40]	; 0x28
    9824:	1580301c 	strne	r3, [r0, #28]
    9828:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000982c <GetGpio>:
    982c:	e3500035 	cmp	r0, #53	; 0x35
    9830:	81a0f00e 	movhi	pc, lr
    9834:	e92d4010 	push	{r4, lr}
    9838:	e1a04000 	mov	r4, r0
    983c:	ebffffd6 	bl	979c <GetGpioAddress>
    9840:	e1a032a4 	lsr	r3, r4, #5
    9844:	e1a03103 	lsl	r3, r3, #2
    9848:	e0800003 	add	r0, r0, r3
    984c:	e204401f 	and	r4, r4, #31
    9850:	e3a03001 	mov	r3, #1
    9854:	e1a03413 	lsl	r3, r3, r4
    9858:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    985c:	e0044003 	and	r4, r4, r3
    9860:	e3340000 	teq	r4, #0
    9864:	03a00000 	moveq	r0, #0
    9868:	13a00001 	movne	r0, #1
    986c:	e8bd8010 	pop	{r4, pc}
    9870:	3f200000 	.word	0x3f200000
